Example 1:

Input:
N = 3
arr[] = {1,2,3}
Output: 1
Explanation: index 2 is 3.
It is the peak element as it is 
greater than its neighbour 2.
Example 2:

Input:
N = 2
arr[] = {3,4}
Output: 1
Explanation: 4 (at index 1) is the 
peak element as it is greater than 
its only neighbour element 3.


// Time complexity : O(logn)
// Space complexity : O(1)

class Solution
{
    public:
    int peakElement(int a[], int n)
    {
        int l = 0, r = n-1;
        
        while(l <= r)
        {
            int mid = (l+r) >> 1;
            
            if((mid == 0 || a[mid] >= a[mid-1]) && (mid == n-1 || a[mid] >= a[mid+1]))
            return mid;
            
            if(a[mid] < a[mid+1])
            l = mid+1;
            
            else
            r = mid-1;
            
        }
       
        return -1;
    }
};
