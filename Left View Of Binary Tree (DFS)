Left view of following tree is 1 2 4 8.

          1
       /     \
     2        3
   /     \    /    \
  4     5   6    7
   \
     8   

Example 1:

Input:
   1
 /  \
3    2
Output: 1 3




// Time complexity : O(h)
 // space complexity : O(n)
 
void callLeftView(Node *root, vector<int> &res, int level)
{
    if(!root) return;
    
    // cur level is maxi
    // then this is the first node of that level
    if(level == res.size())
    {
        res.push_back(root->data);
    }
    
    // recursion for left subtree
    callLeftView(root->left, res, level+1);
    
    // recursion for right subtree
    callLeftView(root->right, res, level+1);
}
vector<int> leftView(Node *root)
{
  vector<int> res;
 
  callLeftView(root, res, 0);
  
  return res;
}
